{"ast":null,"code":"const handleLogin = async e => {\n  e.preventDefault();\n\n  // Send login request to backend\n  try {\n    const response = await fetch('http://localhost:5000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const data = await response.json();\n    if (response.ok) {\n      alert(data.message); // Login successful\n      navigate(\"/user-management\"); // Redirect if login is successful\n    } else {\n      alert(data.message); // Invalid credentials\n    }\n  } catch (error) {\n    alert('An error occurred. Please try again.');\n  }\n};","map":{"version":3,"names":["handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","email","password","data","json","ok","alert","message","navigate","error"],"sources":["C:/Users/user/Desktop/userPortalTwo/src/pages/Login.js"],"sourcesContent":["const handleLogin = async (e) => {\r\n  e.preventDefault();\r\n  \r\n  // Send login request to backend\r\n  try {\r\n    const response = await fetch('http://localhost:5000/login', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ email, password }),\r\n    });\r\n    \r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      alert(data.message); // Login successful\r\n      navigate(\"/user-management\"); // Redirect if login is successful\r\n    } else {\r\n      alert(data.message); // Invalid credentials\r\n    }\r\n  } catch (error) {\r\n    alert('An error occurred. Please try again.');\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,CAAC,IAAK;EAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;;EAElB;EACA,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;MAC1DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC;IAEF,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;IAElC,IAAIV,QAAQ,CAACW,EAAE,EAAE;MACfC,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;MACrBC,QAAQ,CAAC,kBAAkB,CAAC,CAAC,CAAC;IAChC,CAAC,MAAM;MACLF,KAAK,CAACH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;IACvB;EACF,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdH,KAAK,CAAC,sCAAsC,CAAC;EAC/C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}