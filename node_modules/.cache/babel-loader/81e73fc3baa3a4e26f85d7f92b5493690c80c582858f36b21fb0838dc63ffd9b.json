{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";import\"../pages/UserManagement.css\";// Correct path to UserManagement.css in pages folder\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function UserManagement(){const[users,setUsers]=useState([]);const navigate=useNavigate();useEffect(()=>{// Fetch users from the backend API\nconst fetchUsers=async()=>{try{const response=await fetch(\"http://localhost:5000/users\");// Log the raw response to see if it's HTML (error page) or JSON\nconst text=await response.text();console.log('Response:',text);// Log response for debugging\n// If the response is ok, parse it as JSON\nif(response.ok){const data=JSON.parse(text);// Parse as JSON\nsetUsers(data.users);// Update the users state with the data from the response\n}else{console.error(\"Failed to fetch users\",text);// Log error message if response is not ok\n}}catch(error){console.error(\"Error fetching users:\",error);// Log any errors during the fetch process\n}};fetchUsers();// Call the function to fetch users when the component mounts\n},[]);// Empty dependency array ensures this runs only once when the component mounts\nconst toggleBlock=id=>{setUsers(users.map(user=>user.id===id?{...user,blocked:!user.blocked}:user));};const deleteUser=id=>{setUsers(users.filter(user=>user.id!==id));};return/*#__PURE__*/_jsxs(\"div\",{className:\"user-management-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"User Management\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/\"),children:\"Go to Login\"}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Last Seen\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:users.length>0?users.map(user=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:user.name}),/*#__PURE__*/_jsx(\"td\",{children:user.email}),/*#__PURE__*/_jsx(\"td\",{children:user.lastSeen}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleBlock(user.id),children:user.blocked?\"Unblock\":\"Block\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteUser(user.id),children:\"Delete\"})]})]},user.id)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",children:\"No users found\"})})})]})]});}export default UserManagement;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","UserManagement","users","setUsers","navigate","fetchUsers","response","fetch","text","console","log","ok","data","JSON","parse","error","toggleBlock","id","map","user","blocked","deleteUser","filter","className","children","onClick","length","name","email","lastSeen","colSpan"],"sources":["C:/Users/user/Desktop/userPortalTwo/userPortalTwo/src/components/UserManagement.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../pages/UserManagement.css\"; // Correct path to UserManagement.css in pages folder\r\n\r\nfunction UserManagement() {\r\n  const [users, setUsers] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch users from the backend API\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/users\");\r\n\r\n        // Log the raw response to see if it's HTML (error page) or JSON\r\n        const text = await response.text();\r\n        console.log('Response:', text); // Log response for debugging\r\n\r\n        // If the response is ok, parse it as JSON\r\n        if (response.ok) {\r\n          const data = JSON.parse(text); // Parse as JSON\r\n          setUsers(data.users); // Update the users state with the data from the response\r\n        } else {\r\n          console.error(\"Failed to fetch users\", text); // Log error message if response is not ok\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching users:\", error); // Log any errors during the fetch process\r\n      }\r\n    };\r\n\r\n    fetchUsers(); // Call the function to fetch users when the component mounts\r\n  }, []); // Empty dependency array ensures this runs only once when the component mounts\r\n\r\n  const toggleBlock = (id) => {\r\n    setUsers(users.map(user =>\r\n      user.id === id ? { ...user, blocked: !user.blocked } : user\r\n    ));\r\n  };\r\n\r\n  const deleteUser = (id) => {\r\n    setUsers(users.filter(user => user.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-management-container\">\r\n      <h2>User Management</h2>\r\n      <button onClick={() => navigate(\"/\")}>Go to Login</button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Last Seen</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.length > 0 ? (\r\n            users.map(user => (\r\n              <tr key={user.id}>\r\n                <td>{user.name}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.lastSeen}</td>\r\n                <td>\r\n                  <button onClick={() => toggleBlock(user.id)}>\r\n                    {user.blocked ? \"Unblock\" : \"Block\"}\r\n                  </button>\r\n                  <button onClick={() => deleteUser(user.id)}>Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\">No users found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserManagement;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,6BAA6B,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtC,QAAS,CAAAC,cAAcA,CAAA,CAAG,CACxB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAU,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAU,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAE3D;AACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAF,QAAQ,CAACE,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC,WAAW,CAAEF,IAAI,CAAC,CAAE;AAEhC;AACA,GAAIF,QAAQ,CAACK,EAAE,CAAE,CACf,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,CAAE;AAC/BL,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC,CAAE;AACxB,CAAC,IAAM,CACLO,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAEP,IAAI,CAAC,CAAE;AAChD,CACF,CAAE,MAAOO,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAAE;AACjD,CACF,CAAC,CAEDV,UAAU,CAAC,CAAC,CAAE;AAChB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,KAAM,CAAAW,WAAW,CAAIC,EAAE,EAAK,CAC1Bd,QAAQ,CAACD,KAAK,CAACgB,GAAG,CAACC,IAAI,EACrBA,IAAI,CAACF,EAAE,GAAKA,EAAE,CAAG,CAAE,GAAGE,IAAI,CAAEC,OAAO,CAAE,CAACD,IAAI,CAACC,OAAQ,CAAC,CAAGD,IACzD,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAE,UAAU,CAAIJ,EAAE,EAAK,CACzBd,QAAQ,CAACD,KAAK,CAACoB,MAAM,CAACH,IAAI,EAAIA,IAAI,CAACF,EAAE,GAAKA,EAAE,CAAC,CAAC,CAChD,CAAC,CAED,mBACEjB,KAAA,QAAKuB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,eACxC1B,IAAA,OAAA0B,QAAA,CAAI,iBAAe,CAAI,CAAC,cACxB1B,IAAA,WAAQ2B,OAAO,CAAEA,CAAA,GAAMrB,QAAQ,CAAC,GAAG,CAAE,CAAAoB,QAAA,CAAC,aAAW,CAAQ,CAAC,cAC1DxB,KAAA,UAAAwB,QAAA,eACE1B,IAAA,UAAA0B,QAAA,cACExB,KAAA,OAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAI,MAAI,CAAI,CAAC,cACb1B,IAAA,OAAA0B,QAAA,CAAI,OAAK,CAAI,CAAC,cACd1B,IAAA,OAAA0B,QAAA,CAAI,WAAS,CAAI,CAAC,cAClB1B,IAAA,OAAA0B,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACR1B,IAAA,UAAA0B,QAAA,CACGtB,KAAK,CAACwB,MAAM,CAAG,CAAC,CACfxB,KAAK,CAACgB,GAAG,CAACC,IAAI,eACZnB,KAAA,OAAAwB,QAAA,eACE1B,IAAA,OAAA0B,QAAA,CAAKL,IAAI,CAACQ,IAAI,CAAK,CAAC,cACpB7B,IAAA,OAAA0B,QAAA,CAAKL,IAAI,CAACS,KAAK,CAAK,CAAC,cACrB9B,IAAA,OAAA0B,QAAA,CAAKL,IAAI,CAACU,QAAQ,CAAK,CAAC,cACxB7B,KAAA,OAAAwB,QAAA,eACE1B,IAAA,WAAQ2B,OAAO,CAAEA,CAAA,GAAMT,WAAW,CAACG,IAAI,CAACF,EAAE,CAAE,CAAAO,QAAA,CACzCL,IAAI,CAACC,OAAO,CAAG,SAAS,CAAG,OAAO,CAC7B,CAAC,cACTtB,IAAA,WAAQ2B,OAAO,CAAEA,CAAA,GAAMJ,UAAU,CAACF,IAAI,CAACF,EAAE,CAAE,CAAAO,QAAA,CAAC,QAAM,CAAQ,CAAC,EACzD,CAAC,GATEL,IAAI,CAACF,EAUV,CACL,CAAC,cAEFnB,IAAA,OAAA0B,QAAA,cACE1B,IAAA,OAAIgC,OAAO,CAAC,GAAG,CAAAN,QAAA,CAAC,gBAAc,CAAI,CAAC,CACjC,CACL,CACI,CAAC,EACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAvB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}